# Build 단계
FROM --platform=linux/amd64 amazoncorretto:17-alpine AS builder

WORKDIR /app

COPY gradlew settings.gradle build.gradle ./
COPY gradle ./gradle
RUN chmod +x ./gradlew
RUN ./gradlew dependencies --no-daemon

COPY src ./src
RUN ./gradlew bootJar --no-daemon

# Runtime 단계
FROM --platform=linux/amd64 amazoncorretto:17-alpine

# 필요한 패키지 설치
RUN apk add --no-cache openssh-server sudo shadow curl libcap certbot

# Certbot 설정을 위한 디렉토리 생성
RUN mkdir -p /etc/letsencrypt
RUN mkdir -p /var/lib/letsencrypt
RUN mkdir -p /var/log/letsencrypt
RUN mkdir -p /webroot

# SSH 설정
RUN ssh-keygen -A
RUN mkdir -p /home/spring/.ssh
RUN echo "PermitRootLogin no" >> /etc/ssh/sshd_config
RUN echo "PasswordAuthentication no" >> /etc/ssh/sshd_config

# spring 사용자 생성
RUN adduser -D -s /bin/sh spring && \
    echo "spring:spring" | chpasswd && \
    addgroup spring wheel && \
    passwd -u spring

# sudoers 설정
RUN echo "%wheel ALL=(ALL) NOPASSWD: /usr/sbin/sshd" >> /etc/sudoers
RUN echo "%wheel ALL=(ALL) NOPASSWD: /usr/bin/certbot" >> /etc/sudoers

WORKDIR /app

# 애플리케이션 파일 복사
COPY --from=builder /app/build/libs/*.jar app.jar

# DDNS 스크립트 설정
COPY ddns-update.sh /app/ddns-update.sh
RUN chmod +x /app/ddns-update.sh && \
    chown spring:spring /app/ddns-update.sh

# SSH 키 설정
COPY authorized_keys /home/spring/.ssh/authorized_keys
RUN chown -R spring:spring /home/spring/.ssh && \
    chmod 700 /home/spring/.ssh && \
    chmod 600 /home/spring/.ssh/authorized_keys

# 권한 설정
RUN chown -R spring:spring /app
RUN chown -R spring:spring /etc/letsencrypt
RUN chown -R spring:spring /var/lib/letsencrypt
RUN chown -R spring:spring /var/log/letsencrypt
RUN chown -R spring:spring /webroot

# 443 포트 바인딩 권한 부여
RUN setcap 'cap_net_bind_service=+ep' $(readlink -f $(which java))

ENV SPRING_PROFILES_ACTIVE=prod

# 하나의 HEALTHCHECK만 유지 (SSL)
HEALTHCHECK --interval=30s --timeout=3s \
  CMD curl -k https://localhost:443/actuator/health || exit 1

# Let's Encrypt 인증서 갱신 스크립트
COPY renew-cert.sh /app/renew-cert.sh
RUN chmod +x /app/renew-cert.sh

# entrypoint 설정
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

USER spring

EXPOSE 443 80

ENTRYPOINT ["/entrypoint.sh"]