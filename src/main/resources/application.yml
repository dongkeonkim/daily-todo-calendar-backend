spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: validate
  data:
    redis:
      port: 6379

management:
  endpoints:
    web:
      exposure:
        include: health

---

spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/memo?serverTimezone=UTC&allowPublicKeyRetrieval=true}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000
      max-lifetime: 1800000
      connection-timeout: 30000
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    root: INFO
    sql: debug
    org.hibernate.orm.jdbc.bind: trace

server:
  port: 8080

secret-key: ${JWT_SECRET_KEY:jwt-dev-key}

---

spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: ${DB_MAX_POOL_SIZE:10}
      minimum-idle: ${DB_MIN_IDLE:5}
      connection-timeout: 20000
      idle-timeout: 600000
      max-lifetime: 1200000
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      password: ${SPRING_REDIS_PASSWORD:}
      timeout: 3000
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false

server:
  port: 443
  ssl:
    enabled: true
    key-store: file:/etc/letsencrypt/live/${DOMAIN_NAME}/keystore.p12
    key-store-type: PKCS12
    key-store-password: ${SSL_KEY_STORE_PASSWORD}
  http:
    port: 80

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /management
  endpoint:
    health:
      show-details: when_authorized

logging:
  level:
    root: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type: INFO

secret-key: ${JWT_SECRET_KEY}