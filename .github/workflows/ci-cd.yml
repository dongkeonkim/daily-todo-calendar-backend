name: CI/CD for DailyTodoCalendar

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: dailytodocalendar
  REGION: us-central1
  DOCKER_IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/dailytodocalendar

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Run tests
        run: ./gradlew test

      # 테스트를 위해 아티팩트 업로드 단계 주석 처리
      # - name: Upload test report
      #   uses: actions/upload-artifact@v1
      #   if: always()
      #   with:
      #     name: test-report
      #     path: build/reports/tests/test/

      # - name: Upload build artifact
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: app-jar
      #     path: build/libs/*.jar

  deploy-to-cloud-run:
    name: Deploy to Cloud Run
    needs: build-and-test
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 이 단계도 주석 처리
      # - name: Download build artifact
      #   uses: actions/download-artifact@v1
      #   with:
      #     name: app-jar
      #     path: build/libs/

      # 대신 직접 빌드
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |
          docker build -f Dockerfile -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
          docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          env_vars: |
            SPRING_PROFILES_ACTIVE=prod
          secrets: |
            JWT_SECRET_KEY=JWT_SECRET_KEY:latest
            SPRING_DATASOURCE_URL=SPRING_DATASOURCE_URL:latest
          flags: |
            --service-account=cloud-sql-proxy@loyal-curve-454512-u7.iam.gserviceaccount.com
            --add-cloudsql-instances=fresh-forest-454510-i9:us-central1:myapp-prod-postgresql
            --memory=1Gi
            --allow-unauthenticated

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}